basePath: /
definitions:
  models.Subscription:
    properties:
      end_date:
        description: 'формат: MM-YYYY'
        example: 12-2024
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      price:
        description: Цена в центах
        example: 1299
        type: integer
      service_name:
        example: Netflix
        type: string
      start_date:
        description: 'формат: MM-YYYY'
        example: 01-2024
        type: string
      user_id:
        example: 987e6543-e21b-12d3-a456-426614174999
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: REST API for a marketplace with user auth and ads
  title: Marketplace API
  version: "1.0"
paths:
  /subscriptions:
    get:
      description: Returns all subscriptions for the specified user
      parameters:
      - description: User UUID
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Subscription'
            type: array
        "400":
          description: user_id required
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Could not fetch subscriptions
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List all subscriptions for a user
      tags:
      - subscriptions
    post:
      consumes:
      - application/json
      description: Create a new subscription for a user
      parameters:
      - description: Subscription data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Subscription'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Subscription'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Could not create subscription
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new subscription
      tags:
      - subscriptions
  /subscriptions/{id}:
    delete:
      description: Deletes the subscription with the specified ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Delete failed
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a subscription
      tags:
      - subscriptions
    get:
      description: Returns the subscription with the specified ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Subscription'
        "404":
          description: Not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get subscription by ID
      tags:
      - subscriptions
    put:
      consumes:
      - application/json
      description: Updates an existing subscription by ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated subscription data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Subscription'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Subscription'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Update failed
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a subscription
      tags:
      - subscriptions
  /subscriptions/summary:
    get:
      description: Calculates the total subscription cost over a given period, optionally
        filtered by user ID and service name
      parameters:
      - description: Start date in MM-YYYY format
        in: query
        name: from
        required: true
        type: string
      - description: End date in MM-YYYY format
        in: query
        name: to
        required: true
        type: string
      - description: Filter by user ID
        in: query
        name: user_id
        type: string
      - description: Filter by service name
        in: query
        name: service_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Total cost
          schema:
            additionalProperties:
              type: integer
            type: object
        "400":
          description: Invalid query
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Could not calculate total
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Calculate total cost of subscriptions
      tags:
      - subscriptions
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
